/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModelTestFrame.java
 *
 * Created on 2009-5-13, 21:27:52
 */

package net.epsilony.simpmeshfree.model;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Area;
import java.awt.geom.Path2D;
import java.awt.geom.PathIterator;
import java.awt.geom.Rectangle2D;
import java.util.Enumeration;
import java.util.LinkedList;
import javax.swing.JPanel;
import net.epsilony.math.radialbasis.MultiQuadRadial;
import net.epsilony.simpmeshfree.model.geometry.BoundaryCondition;
import net.epsilony.simpmeshfree.model.geometry.BoundaryConditions;
import net.epsilony.simpmeshfree.model.geometry.GeometryModel;
import net.epsilony.simpmeshfree.model.geometry.LineSegment;
import net.epsilony.simpmeshfree.model.geometry.Segment;
import net.epsilony.simpmeshfree.model.mechanics.MechanicsModel;
import net.epsilony.simpmeshfree.model.mechanics.MechanicsModel.SimpleRoundSupportDomain;
import net.epsilony.simpmeshfree.shapefun.RadialPolynomialShapeFunction;
import net.epsilony.simpmeshfree.utils.ModelPanelManager;
import org.apache.commons.math.ArgumentOutsideDomainException;
import org.apache.log4j.Appender;
import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.log4j.PatternLayout;
import org.apache.log4j.TTCCLayout;

/**
 *
 * @author epsilon
 */
public class ModelTestFrame extends javax.swing.JFrame {
    double P=-1000;
    double E=3e7;
    double v=0.3;
    double D=12;
    double L=48;
    static Logger log=Logger.getLogger(ModelTestFrame.class);

    /** Creates new form ModelTestFrame */
    public ModelTestFrame() {
        initComponents();
    }

    public class ModelPanel extends JPanel{

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
           mpm.paintPanel((Graphics2D) g);
        }

    }

    ModelPanel panel=new ModelPanel();
    ModelPanelManager mpm;
    GeometryModel gm=new GeometryModel();
    MechanicsModel mm=new MechanicsModel(gm);
    {
        BasicConfigurator.configure();
        Logger.getRootLogger().setLevel(Level.DEBUG);
        Enumeration allAppenders = Logger.getRootLogger().getAllAppenders();
        while(allAppenders.hasMoreElements()){
            Appender at=(Appender) allAppenders.nextElement();
            at.setLayout(new PatternLayout("%r [%t] %-5p %c{3} %x - %m%n"  ));
        }

        gm.addShape(new Rectangle2D.Double(0, -6, 48, 12));
        
        gm.compile(0.1, 0.1);
        LinkedList<Segment> segs=new LinkedList<Segment>();
        gm.segmentSearch(-1, -1, 1, 1, segs);
        if(log.isDebugEnabled()){
            log.debug("segs:");
            for(Segment seg:segs){
                log.debug(seg);
            }
        }
        LineSegment lineSegment=(LineSegment) segs.getFirst();
        lineSegment.addBoundaryCondition(BoundaryConditions.getTimoshenkoEssential(E, v, P, L, D, lineSegment));
        gm.segmentSearch(47, -1, 49, 1, segs);
        if(log.isDebugEnabled()){
            log.debug("segs:");
            for(Segment seg:segs){
                log.debug(seg);
            }
        }
        lineSegment=(LineSegment) segs.getFirst();
        lineSegment.addBoundaryCondition(BoundaryConditions.getTimoshenkoNatural(E, v, P, L, D, lineSegment));
        
        mpm=new ModelPanelManager(panel, gm.getLeftDown().getX(),gm.getLeftDown().getY(), gm.getRightUp().getX(), gm.getRightUp().getY());
        mpm.addModelImagePainter(gm);

        mm.generateNodesByTriangle(0.5, 0.1, "pq0Q", true, true);
        mm.generateQuadratureDomainsByTriangle(0.25, 0.1, "pq");
        mm.setQuadN(3);
        mm.setSupportDomain(mm.new SimpleRoundSupportDomain(2, 4, 3, 10));
        mm.setShapeFunction(new RadialPolynomialShapeFunction(new MultiQuadRadial(4, 1.03), 1));
        try {
            mm.solve();
        } catch (ArgumentOutsideDomainException ex) {
            java.util.logging.Logger.getLogger(ModelTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

    }





    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = panel;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setDoubleBuffered(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 845, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ModelTestFrame().setVisible(true);
            }
        });
       
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
